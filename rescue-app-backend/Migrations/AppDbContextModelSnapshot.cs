// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using rescueApp.Data;

#nullable disable

namespace rescueApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("rescueApp.Models.Adopter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdopterAptUnit")
                        .HasColumnType("text")
                        .HasColumnName("adopter_apt_unit");

                    b.Property<string>("AdopterCity")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_city");

                    b.Property<string>("AdopterEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_email");

                    b.Property<string>("AdopterFirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_first_name");

                    b.Property<string>("AdopterLastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_last_name");

                    b.Property<string>("AdopterPrimaryPhone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_primary_phone");

                    b.Property<string>("AdopterPrimaryPhoneType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_primary_phone_type");

                    b.Property<string>("AdopterSecondaryPhone")
                        .HasColumnType("text")
                        .HasColumnName("adopter_secondary_phone");

                    b.Property<string>("AdopterSecondaryPhoneType")
                        .HasColumnType("text")
                        .HasColumnName("adopter_secondary_phone_type");

                    b.Property<string>("AdopterStateProvince")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_state_province");

                    b.Property<string>("AdopterStreetAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_street_address");

                    b.Property<string>("AdopterZipPostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adopter_zip_postal_code");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("SpousePartnerRoommate")
                        .HasColumnType("text")
                        .HasColumnName("spouse_partner_roommate");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by_user_id");

                    b.HasKey("Id")
                        .HasName("pk_adopters");

                    b.HasIndex("AdopterEmail")
                        .IsUnique()
                        .HasDatabaseName("ix_adopters_adopter_email");

                    b.HasIndex("CreatedByUserId")
                        .HasDatabaseName("ix_adopters_created_by_user_id");

                    b.HasIndex("UpdatedByUserId")
                        .HasDatabaseName("ix_adopters_updated_by_user_id");

                    b.ToTable("adopters", "public");
                });

            modelBuilder.Entity("rescueApp.Models.AdoptionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdopterId")
                        .HasColumnType("integer")
                        .HasColumnName("adopter_id");

                    b.Property<DateTime>("AdoptionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("adoption_date");

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer")
                        .HasColumnName("animal_id");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("return_date");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by_user_id");

                    b.HasKey("Id")
                        .HasName("pk_adoptionhistory");

                    b.HasIndex("AdopterId")
                        .HasDatabaseName("ix_adoptionhistory_adopter_id");

                    b.HasIndex("AnimalId")
                        .HasDatabaseName("ix_adoptionhistory_animal_id");

                    b.HasIndex("CreatedByUserId")
                        .HasDatabaseName("ix_adoptionhistory_created_by_user_id");

                    b.HasIndex("UpdatedByUserId")
                        .HasDatabaseName("ix_adoptionhistory_updated_by_user_id");

                    b.ToTable("adoptionhistory", "public");
                });

            modelBuilder.Entity("rescueApp.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdoptionStatus")
                        .HasColumnType("text")
                        .HasColumnName("adoption_status");

                    b.Property<string>("AnimalType")
                        .HasColumnType("text")
                        .HasColumnName("animal_type");

                    b.Property<string>("Breed")
                        .HasColumnType("text")
                        .HasColumnName("breed");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by_user_id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Story")
                        .HasColumnType("text")
                        .HasColumnName("story");

                    b.Property<Guid?>("UpdatedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by_user_id");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric")
                        .HasColumnName("weight");

                    b.HasKey("Id")
                        .HasName("pk_animals");

                    b.HasIndex("CreatedByUserId")
                        .HasDatabaseName("ix_animals_created_by_user_id");

                    b.HasIndex("UpdatedByUserId")
                        .HasDatabaseName("ix_animals_updated_by_user_id");

                    b.ToTable("animals", "public");
                });

            modelBuilder.Entity("rescueApp.Models.AnimalDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer")
                        .HasColumnName("animal_id");

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blob_name");

                    b.Property<string>("BlobUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blob_url");

                    b.Property<DateTime>("DateUploaded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_uploaded")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("document_type");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<Guid?>("UploadedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("uploaded_by_user_id");

                    b.HasKey("Id")
                        .HasName("pk_animal_documents");

                    b.HasIndex("AnimalId")
                        .HasDatabaseName("ix_animal_documents_animal_id");

                    b.HasIndex("BlobName")
                        .IsUnique()
                        .HasDatabaseName("ix_animal_documents_blob_name");

                    b.HasIndex("UploadedByUserId")
                        .HasDatabaseName("ix_animal_documents_uploaded_by_user_id");

                    b.ToTable("animal_documents", "public");
                });

            modelBuilder.Entity("rescueApp.Models.AnimalImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("integer")
                        .HasColumnName("animal_id");

                    b.Property<string>("BlobName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blob_name");

                    b.Property<string>("Caption")
                        .HasColumnType("text")
                        .HasColumnName("caption");

                    b.Property<DateTime>("DateUploaded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_uploaded")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("DisplayOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("display_order");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_primary");

                    b.Property<Guid?>("UploadedByUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("uploaded_by_user_id");

                    b.HasKey("Id")
                        .HasName("pk_animal_images");

                    b.HasIndex("AnimalId")
                        .HasDatabaseName("ix_animal_images_animal_id");

                    b.HasIndex("BlobName")
                        .IsUnique()
                        .HasDatabaseName("ix_animal_images_blob_name");

                    b.HasIndex("UploadedByUserId")
                        .HasDatabaseName("ix_animal_images_uploaded_by_user_id");

                    b.ToTable("animal_images", "public");
                });

            modelBuilder.Entity("rescueApp.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("ExternalProviderId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("external_provider_id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login_date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", "public");
                });

            modelBuilder.Entity("rescueApp.Models.Adopter", b =>
                {
                    b.HasOne("rescueApp.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_adopters_users_created_by_user_id");

                    b.HasOne("rescueApp.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_adopters_users_updated_by_user_id");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("rescueApp.Models.AdoptionHistory", b =>
                {
                    b.HasOne("rescueApp.Models.Adopter", "Adopter")
                        .WithMany("AdoptionHistories")
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_adoptionhistory_adopters_adopter_id");

                    b.HasOne("rescueApp.Models.Animal", "Animal")
                        .WithMany("AdoptionHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_adoptionhistory_animals_animal_id");

                    b.HasOne("rescueApp.Models.User", "CreatedByUser")
                        .WithMany("CreatedAdoptionHistories")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_adoptionhistory_users_created_by_user_id");

                    b.HasOne("rescueApp.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId")
                        .HasConstraintName("fk_adoptionhistory_users_updated_by_user_id");

                    b.Navigation("Adopter");

                    b.Navigation("Animal");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("rescueApp.Models.Animal", b =>
                {
                    b.HasOne("rescueApp.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_animals_users_created_by_user_id");

                    b.HasOne("rescueApp.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_animals_users_updated_by_user_id");

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("rescueApp.Models.AnimalDocument", b =>
                {
                    b.HasOne("rescueApp.Models.Animal", "Animal")
                        .WithMany("AnimalDocuments")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animal_documents_animals_animal_id");

                    b.HasOne("rescueApp.Models.User", "UploadedByUser")
                        .WithMany()
                        .HasForeignKey("UploadedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_animal_documents_users_uploaded_by_user_id");

                    b.Navigation("Animal");

                    b.Navigation("UploadedByUser");
                });

            modelBuilder.Entity("rescueApp.Models.AnimalImage", b =>
                {
                    b.HasOne("rescueApp.Models.Animal", "Animal")
                        .WithMany("AnimalImages")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_animal_images_animals_animal_id");

                    b.HasOne("rescueApp.Models.User", "UploadedByUser")
                        .WithMany()
                        .HasForeignKey("UploadedByUserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_animal_images_users_uploaded_by_user_id");

                    b.Navigation("Animal");

                    b.Navigation("UploadedByUser");
                });

            modelBuilder.Entity("rescueApp.Models.Adopter", b =>
                {
                    b.Navigation("AdoptionHistories");
                });

            modelBuilder.Entity("rescueApp.Models.Animal", b =>
                {
                    b.Navigation("AdoptionHistories");

                    b.Navigation("AnimalDocuments");

                    b.Navigation("AnimalImages");
                });

            modelBuilder.Entity("rescueApp.Models.User", b =>
                {
                    b.Navigation("CreatedAdoptionHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
